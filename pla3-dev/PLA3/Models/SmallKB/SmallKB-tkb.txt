************************* 80 columns *******************************************
***
*** --------------------------------------------------------------------
*** Pathway Logic Assistant.
*** Copyright (C) 2006, SRI International.  All Rights Reserved.
***
*** This program is free software; you can redistribute it and/or
*** modify it under the terms of the GNU General Public License
*** as published by the Free Software Foundation; either version 2
*** of the License, or (at your option) any later version.
***
*** This program is distributed in the hope that it will be useful,
*** but WITHOUT ANY WARRANTY; without even the implied warranty of
*** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*** GNU General Public License for more details.
***
*** You should have received a copy of the GNU General Public License
*** along with this program; if not, write to the Free Software
*** Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*** --------------------------------------------------------------------
***

(entry tval(qidlist tkb SmallKB)(notes(note graph :=(qval SmallKB))
(note source :=(qval rules QQQ)))(tval QQQ pnTrans('15.Cbl.reloc.Yphos,< Cbl,
    CLc >,<[Cbl - Yphos],CLi >,< Egf :[EgfR - act],CLm >)pnTrans(
    '15.Cbl.reloc.Yphos#1,< Cbl,CLc >,<[Cbl - Yphos],CLi >,< Tgfa :[EgfR -
    act],CLm >)pnTrans('1.EgfR.act,< Egf,Out > < EgfR,CLm >,< Egf :[EgfR -
    act],CLm >,none)pnTrans('1.EgfR.act#1,< EgfR,CLm > < Tgfa,Out >,< Tgfa :[
    EgfR - act],CLm >,none)pnTrans('5.Grb2.reloc,< Grb2,CLc >,<[Grb2 - reloc],
    CLi >,< Egf :[EgfR - act],CLm >)pnTrans('5.Grb2.reloc#1,< Grb2,CLc >,<[Grb2
    - reloc],CLi >,< Tgfa :[EgfR - act],CLm >)pnTrans('7.IP3.from.PIP2.by.Plc,<
    PIP2,CLm >,< DAG,CLm > < IP3,CLc >,<[Plcg - act],CLi >)pnTrans(
    '9.PIP3.from.PIP2.by.Pi3k,< PIP2,CLm >,< PIP3,CLm >,<[Pi3k - act],CLi
    >)pnTrans('E56.Pak1.irt.Egf,< Pak1,CLc >,<[Pak1 - act],CLi >,< Egf :[EgfR -
    act],CLm >)pnTrans('E56.Pak1.irt.Egf#1,< Pak1,CLc >,<[Pak1 - act],CLi >,<
    Tgfa :[EgfR - act],CLm >)pnTrans('8.Pi3k.act,< Pi3k,CLc >,<[Pi3k - act],CLi
    >,<[Gab1 - Yphos],CLi >)pnTrans('13.Sos1.reloc,< Sos1,CLc >,<[Sos1 -
    reloc],CLi >,<[Grb2 - reloc],CLi >)pnTrans('4.Gab1.Yphosed,< Gab1,CLc >,<[
    Gab1 - Yphos],CLi >,< Egf :[EgfR - act],CLm > <[Grb2 - reloc],CLi
    >)pnTrans('4.Gab1.Yphosed#1,< Gab1,CLc >,<[Gab1 - Yphos],CLi >,< Tgfa :[
    EgfR - act],CLm > <[Grb2 - reloc],CLi >)pnTrans('11.Shc.Yphosed,< Shc,CLc
    >,<[Shc - Yphos],CLi >,< Src,CLi > < Egf :[EgfR - act],CLm >)pnTrans(
    '11.Shc.Yphosed#1,< Shc,CLc >,<[Shc - Yphos],CLi >,< Src,CLi > < Tgfa :[
    EgfR - act],CLm >)pnTrans('14.Vav2.act,< Vav2,CLc >,<[Vav2 - act],CLi >,<
    Src,CLi > < Egf :[EgfR - act],CLm >)pnTrans('14.Vav2.act#1,< Vav2,CLc >,<[
    Vav2 - act],CLi >,< Src,CLi > < Tgfa :[EgfR - act],CLm >)pnTrans(
    'clt1.ctest,< Src,CLi > <[Cbl - Yphos],CLi > <[Vav2 - act],CLi >,< Src :[
    Cbl - Yphos]:[Vav2 - act],CLi >,none)pnTrans('2.EgfR.ubiq,< Egf :[EgfR -
    act],CLm > <[Ube2l3 - ubiq],CLi >,< Ube2l3,CLi > < Egf :[EgfR - ubiq],CLm
    >,<[Cbl - Yphos],CLi >)pnTrans('2.EgfR.ubiq#1,< Tgfa :[EgfR - act],CLm > <[
    Ube2l3 - ubiq],CLi >,< Ube2l3,CLi > < Tgfa :[EgfR - ubiq],CLm >,<[Cbl -
    Yphos],CLi >)pnTrans('12.Sos1.reinit,<[Grb2 - reloc],CLi > <[Sos1 - reloc],
    CLi >,< Sos1,CLc > <[Grb2 - Yphos],CLi >,< Egf :[EgfR - act],CLm >)pnTrans(
    '12.Sos1.reinit#1,<[Grb2 - reloc],CLi > <[Sos1 - reloc],CLi >,< Sos1,CLc >
    <[Grb2 - Yphos],CLi >,< Tgfa :[EgfR - act],CLm >)pnTrans('10.Plcg.act,<
    Plcg,CLc >,<[Plcg - act],CLi >,< PIP3,CLm > < Src,CLi > < Egf :[EgfR -
    act],CLm >)pnTrans('10.Plcg.act#1,< Plcg,CLc >,<[Plcg - act],CLi >,< PIP3,
    CLm > < Src,CLi > < Tgfa :[EgfR - act],CLm >)pnTrans('6.Hras.act.1,<[Hras -
    GDP],CLi >,<[Hras - GTP],CLi >,< PIP3,CLm > <[Grb2 - reloc],CLi > <[Sos1 -
    reloc],CLi >)pnTrans('280.Raf1.by.Hras,< 1433x1,CLc > < Raf1,CLc >,<
    1433x1,CLi > <[Raf1 - act],CLi >,< PP2a,CLc > < Src,CLi > <[Hras - GTP],CLi
    > <[Pak1 - act],CLi >)))
